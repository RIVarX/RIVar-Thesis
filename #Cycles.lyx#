#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass openu-thesis
\begin_preamble
%\usepackage[usenames,dvipsnames]{color}
\usepackage{lmodern}
\usepackage[T1]{fontenc}
\usepackage{textcomp}
\usepackage{graphicx}
\usepackage{url}
\usepackage{tocloft}
\usepackage{tikz}
\usepackage[simplified]{pgf-umlcd}
\usepackage{pgf-umlsd}
\usepackage{algorithm,algpseudocode}
\usepackage{listings}
\lstset{numbers=left, numberfirstline=true, firstnumber=1, stepnumber=1}
\usepackage[section]{placeins}
\usetikzlibrary{positioning,arrows,arrows.meta}
\lstset{%
  breaklines=true,
  breakatwhitespace=true,
   moredelim=[is][\underbar]{_}{_}
}
\usepackage{tikz,rxmarbles}
\usetikzlibrary[arrows,shapes,positioning,matrix]
\tikzset{pair/.style={draw,rectangle,minimum height=1.5cm}}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Cycles
\end_layout

\begin_layout Standard
In the integration with FRP there might contain circular dependencies causing
 infinite loops 
\begin_inset CommandInset citation
LatexCommand cite
key "schuster2016reactive"
literal "false"

\end_inset

 (named also ).
 For example, a change in a reactive variable, might execute an event handler,
 causing the reactive variable to change.
 
\end_layout

\begin_layout Standard
Unfortunately, the integration and option to implement calculation externaly
 leads to the problem named cycles accidental recursion 
\begin_inset CommandInset citation
LatexCommand cite
key "blackheath2016functional"
literal "false"

\end_inset

, cycles 
\begin_inset CommandInset citation
LatexCommand cite
key "schuster2016reactive"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
The problem might happen also in pure FRP (such as happens by imperative-based
 implementation), in case recursive definitions are presented.
 Even the simple formulas 
\begin_inset ERT
status open

\begin_layout Plain Layout

A:=B
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

B:=A
\end_layout

\end_inset

 contain circular dependencies: the value of 
\begin_inset ERT
status open

\begin_layout Plain Layout

A
\end_layout

\end_inset

 is changed in response to any change of the value of 
\begin_inset ERT
status open

\begin_layout Plain Layout

B
\end_layout

\end_inset

, while any change in the value of 
\begin_inset ERT
status open

\begin_layout Plain Layout

B
\end_layout

\end_inset

 triggers a change of the value of 
\begin_inset ERT
status open

\begin_layout Plain Layout

A
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Dependency graphs might contain cycles, e.g., as in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-simple-dependency"
plural "false"
caps "false"
noprefix "false"

\end_inset

, application might contain 
\begin_inset ERT
status open

\begin_layout Plain Layout

A:=B
\end_layout

\end_inset

 and also 
\begin_inset ERT
status open

\begin_layout Plain Layout

B:=A
\end_layout

\end_inset

.
 Cycles need a special treatment, because it might lead to infinite loops.
 As in the example, updating 
\begin_inset ERT
status open

\begin_layout Plain Layout

A
\end_layout

\end_inset

 might lead to update 
\begin_inset ERT
status open

\begin_layout Plain Layout

B
\end_layout

\end_inset

, that might lead again to update 
\begin_inset ERT
status open

\begin_layout Plain Layout

A
\end_layout

\end_inset

, and so on.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering 
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}  
\end_layout

\begin_layout Plain Layout


\backslash
node[shape=circle,draw=black] (A) at (0,5) {A};     
\end_layout

\begin_layout Plain Layout


\backslash
node[shape=circle,draw=black] (B) at (3.5,5) {B};       
\end_layout

\begin_layout Plain Layout


\backslash
path[-{Triangle[scale=1]}] (A) edge [bend left] (B);  
\end_layout

\begin_layout Plain Layout


\backslash
path[-{Triangle[scale=1]}] (B) edge [bend left] (A);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:A-simple-dependency"

\end_inset

A simple dependency graph with cycles
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Furthermore, in the the 
\emph on
glitch
\emph default
 problem 
\begin_inset CommandInset citation
LatexCommand cite
key "bainomugisha2013survey"
literal "false"

\end_inset

, a variable can have several updates caused by a single update.
 Consequently, ignoring repeating updates might lead to incomplete calculations.
 e.g., in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Glitch"
plural "false"
caps "false"
noprefix "false"

\end_inset

, updating 
\begin_inset ERT
status open

\begin_layout Plain Layout

X
\end_layout

\end_inset

 leads to update 
\begin_inset ERT
status open

\begin_layout Plain Layout

Y1
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

Y2
\end_layout

\end_inset

, each of them might lead to update 
\begin_inset ERT
status open

\begin_layout Plain Layout

A
\end_layout

\end_inset

, therfore 
\begin_inset ERT
status open

\begin_layout Plain Layout

A
\end_layout

\end_inset

 might lead to update 
\begin_inset ERT
status open

\begin_layout Plain Layout

B
\end_layout

\end_inset

 with an incomplete calculation, therfore 
\begin_inset ERT
status open

\begin_layout Plain Layout

B
\end_layout

\end_inset

 should not ignore a second update.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering 
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}  
\end_layout

\begin_layout Plain Layout


\backslash
node[shape=circle,draw=black] (X) at (2,9) {X};
\end_layout

\begin_layout Plain Layout


\backslash
node[shape=circle,draw=black] (Y1) at (1,7) {Y1};
\end_layout

\begin_layout Plain Layout


\backslash
node[shape=circle,draw=black] (Y2) at (3,7) {Y2};
\end_layout

\begin_layout Plain Layout


\backslash
node[shape=circle,draw=black] (A) at (2,5) {A}; 
\end_layout

\begin_layout Plain Layout


\backslash
node[shape=circle,draw=black] (B) at (2,3) {B};     
\end_layout

\begin_layout Plain Layout


\backslash
path[-{Triangle[scale=1]}] (Y1) edge  (A);
\end_layout

\begin_layout Plain Layout


\backslash
path[-{Triangle[scale=1]}] (Y2) edge  (A);
\end_layout

\begin_layout Plain Layout


\backslash
path[-{Triangle[scale=1]}] (X) edge  (Y1);
\end_layout

\begin_layout Plain Layout


\backslash
path[-{Triangle[scale=1]}] (X) edge  (Y2);
\end_layout

\begin_layout Plain Layout


\backslash
path[-{Triangle[scale=1]}] (A) edge  (B);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture} 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Glitch"

\end_inset

Dependency Graph that might have Glitch
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Cycles casued by reassigments
\end_layout

\begin_layout Standard
In cycles, in which values are actualy propogated in runtime, there must
 have a variable with 
\emph on
reassigment
\emph default
 
\begin_inset CommandInset citation
LatexCommand citep
key "salvaneschi2014towards"
literal "false"

\end_inset

, i.e., a variable that, during the application execution, is updated according
 to several formulas, or has several 
\emph on
associations
\emph default
.
\end_layout

\begin_layout Standard
Assume, for the sake of contradiction, that there exists a cycle dependency
 graph, such that each variables has a single association.
 So there is a list of reactive variables, each variable has a single associatio
n, with a formula consisting of the next variable, except the last variable
 that is associated with a formula consisting the first variable.
 In runtime, the variables must have values from external input, therefore
 one of the variables must have an association consisting input, that will
 propogate through the cycle.
 This is a contradiction, since it means that it has an additional association.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering 
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout


\backslash
def 
\backslash
n {5} 
\end_layout

\begin_layout Plain Layout


\backslash
def 
\backslash
radius {3cm} 
\end_layout

\begin_layout Plain Layout


\backslash
def 
\backslash
margin {8} % margin in angles, depends on the radius
\end_layout

\begin_layout Plain Layout


\backslash
foreach [count=
\backslash
s] 
\backslash
j in {A,B,...,E} 
\end_layout

\begin_layout Plain Layout

{   
\end_layout

\begin_layout Plain Layout


\backslash
node[draw, circle] (
\backslash
j) at ({360/
\backslash
n * (
\backslash
s - 1)}:
\backslash
radius) {};   
\backslash
draw[->, >=latex] ({360/
\backslash
n * (
\backslash
s - 1)+
\backslash
margin}:
\backslash
radius)      arc ({360/
\backslash
n * (
\backslash
s - 1)+
\backslash
margin}:{360/
\backslash
n * (
\backslash
s)-
\backslash
margin}:
\backslash
radius);          
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node[above] (X) at (5,5) {$input$};    
\end_layout

\begin_layout Plain Layout


\backslash
draw[dotted][->, >=latex] (X) -- (B);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The bottom line is that variables can be updated in response to more than
 one event 
\begin_inset CommandInset citation
LatexCommand citep
key "caspers2017react"
literal "false"

\end_inset

.
 So it is complex to track the dependencies and implementing them, especially
 that the order of the events is not fully predictable, i.e., for a certain
 application and input events, the events execution order might be inconsistent
 
\begin_inset CommandInset citation
LatexCommand citep
key "abelson1996structure"
literal "false"

\end_inset

.
 
\end_layout

\end_body
\end_document
