#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass openu-thesis
\begin_preamble
\usepackage{tikz}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Approach
\end_layout

\begin_layout Standard
Reactive variable is 
\emph on
continuous
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "elliott2009push"
literal "false"

\end_inset

, by being used independant of time.
 Associating reactive variable with an expression, such as 
\begin_inset ERT
status open

\begin_layout Plain Layout

X:=A+B
\end_layout

\end_inset

, describes continously how varying value depends on other varying values.
 In contrast, an 
\emph on
event stream
\emph default
 consists of descrete timed values.
 The event stream is an observable of values produced from being also an
 observer.
\end_layout

\begin_layout Section
Syntax
\end_layout

\begin_layout Standard
Reactive variables, being the FRP code, is integrated with the imperative
 code, by associating reactive variables with events streams, e.g., 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash
A=ValuesFromEvents(InputControl.ChangeEvents)
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
It is allowed having several associations to a single reactive variable.
 e.g., 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

X:=A+B
\end_layout

\begin_layout Plain Layout


\backslash

\backslash
X:=Y
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
or
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

X=ValuesFromEvents(FirstInputControl1.ChangeEvents)
\end_layout

\begin_layout Plain Layout


\backslash

\backslash
X=ValuesFromEvents(FirstInputControl2.ChangeEvents)
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
and also 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

X:=A+B
\end_layout

\begin_layout Plain Layout


\backslash

\backslash
X=ValuesFromEvents(InputControl.ChangeEvents)
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Reactive variables are of reference type, therfore they can have several
 references, being able to add more associations to them.
 e.g., given 
\begin_inset ERT
status open

\begin_layout Plain Layout

A:=X
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout

B:=Y
\end_layout

\end_inset

, while 
\begin_inset ERT
status open

\begin_layout Plain Layout

A=B
\end_layout

\end_inset

, produces a single reactive variable with two associations.
\end_layout

\begin_layout Section
Semantics
\end_layout

\begin_layout Standard
In computers, reactive variable's actual values are not continously given.
 For example, reactive variable reflecting temperature, associated to stream
 of events from measuring by a thermometer.
 Conceptualy, the reactive variable reflects the temperature continuously,
 but in runtime, it depends on the actual stream of values.
\end_layout

\begin_layout Standard
Therfore, reactive variable has two abstraction levels.
 the higher level, is continuous, to being use independant of time.
 But in the lower level (
\begin_inset Quotes eld
\end_inset

under the hood
\begin_inset Quotes erd
\end_inset

), the reactive variable is an event stream.
\end_layout

\begin_layout Standard
Operators over reactive variables, such as 
\begin_inset ERT
status open

\begin_layout Plain Layout

+
\end_layout

\end_inset

 in the expression 
\begin_inset ERT
status open

\begin_layout Plain Layout

A+B
\end_layout

\end_inset

, means in the high level, continuously reflecting the variables' sum.
 However
\emph on
, 
\emph default
in the low level, 
\begin_inset ERT
status open

\begin_layout Plain Layout

A
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout

B
\end_layout

\end_inset

 are streams, and the operator 
\begin_inset ERT
status open

\begin_layout Plain Layout

+
\end_layout

\end_inset

 is a function over them, producing a stream values notifications from applying
 + on the latest values from the notifications from A and B.

\emph on
 
\end_layout

\begin_layout Standard
Reactive variables which is associated with several streams (streams of
 imperative events, streams of reactive variable and streams of an expression
 of reactive variables), are notified about its values from the several
 streams, similar to having several devices to sampling a single variable
 in the world.
 Anyway, the reactive variable provides to its subscribers, a single stream
 of values based on the several streams, it is subscribed to.
 
\end_layout

\begin_layout Section
Distributed Algorithm
\end_layout

\begin_layout Standard
When propogating values through the operators and associations, each party,
 as an observable and observer, tracks its input values and 
\begin_inset Quotes eld
\end_inset

decide
\begin_inset Quotes erd
\end_inset

 what values to notify to its subscribers.
 They should run a distributed algorithm , such that the whole behavior
 is consistent, while each of the variables execute its part independently.
 
\end_layout

\begin_layout Standard
The algorithm should helps the parties handle two challenges: first (for
 the operators), what is named 
\emph on
glitch
\emph default
,
\emph on
 
\emph default
second (for the variables), how to merge the streams.
\end_layout

\end_body
\end_document
