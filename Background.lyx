#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass openu-thesis
\begin_preamble
%\usepackage[usenames,dvipsnames]{color}
\usepackage{lmodern}
\usepackage[T1]{fontenc}
\usepackage{textcomp}
\usepackage{graphicx}
\usepackage{url}
\usepackage{tocloft}
\usepackage{tikz}
\usepackage[simplified]{pgf-umlcd}
\usepackage{pgf-umlsd}
\usepackage{algorithm,algpseudocode}
\usepackage{listings}
\lstset{numbers=left, numberfirstline=true, firstnumber=1, stepnumber=1}
\usepackage[section]{placeins}
\usetikzlibrary{positioning,arrows,arrows.meta}
\lstset{%
  breaklines=true,
  breakatwhitespace=true,
   moredelim=[is][\underbar]{_}{_}
}
\usepackage{tikz,rxmarbles}
\usetikzlibrary[arrows,shapes,positioning,matrix]
\tikzset{pair/.style={draw,rectangle,minimum height=1.5cm}}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Background
\end_layout

\begin_layout Standard
Traditionaly, variables that need to be consistent with other variables,
 either pull the values or use observation features.
 Pulling consumes time and resources, because the application must invoke
 the variables, even in cases when no changes have occurred.
 implementing observation features means 
\emph on
events abstraction
\emph default
, for which user interfaces subscribe to be notified only when changes occur.
 Consequently, the representation become complicated, since it involves
 not only its variables as instance variables, but also the concept of 
\emph on
change events
\emph default
, for which consumers should subscribe to get the variables values.
\end_layout

\begin_layout Standard
Variables that need to be consistent with other variables, 
\emph on
depend
\emph default
 on them.
 Consequently, the variables have 
\emph on
dependencies
\emph default
 that can be modeled by a 
\emph on
dependency graph
\emph default
: variables are respresented by nodes, and for each dependency, there is
 an edge connecting the nodes in the direction of the dependency.
 
\end_layout

\begin_layout Standard
Today, FRP and its variations support to declare the dependancy, implementing
 the updates under the wood.
 This give the developer declare the needed dependencies leaving the frameworks
 to handle the perfomance optimization.
 
\end_layout

\begin_layout Standard
For instance, 
\end_layout

\begin_layout Standard
the following graph model 
\begin_inset ERT
status open

\begin_layout Plain Layout

sensorValue
\end_layout

\end_inset

 that depends on 
\begin_inset ERT
status open

\begin_layout Plain Layout

powerDierence
\end_layout

\end_inset

.
 In the traditional implementation, we observe change events and calculate
 in response: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{sensorValue.changed += { (e) -> powerDierence = f(e) }}
\end_layout

\end_inset

.
 In the FRP style, we just declare the dependency: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{powerDierence := f(sensorValue)}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}  
\end_layout

\begin_layout Plain Layout


\backslash
node[shape=circle,draw=black, label={sensorValue}] (A) at (0,5) {};    
 
\end_layout

\begin_layout Plain Layout


\backslash
node[shape=circle,draw=black ,label={powerDierence}] (B) at (3.5,5) {}; 
    
\end_layout

\begin_layout Plain Layout


\backslash
draw[-{Triangle[scale=1]}] (A) -- (B);       
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture} 
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We focus on the approach 
\begin_inset CommandInset citation
LatexCommand cite
key "salvaneschi2014towards"
literal "false"

\end_inset

, in which an existing language can be extended with a variation of 
\emph on
reactive variable
\emph default
 as a data type, that is used to declare and automate dependencies.
 Objects then can contain 
\emph on
reactive instance variables
\emph default
, that are reactive variables as instance variables (or objects' data members).
\end_layout

\begin_layout Standard
This approach do the switch from applications with one large network dependencie
s 
\begin_inset CommandInset citation
LatexCommand cite
key "marheim2017domain"
literal "false"

\end_inset

 (monolith).
 Dependencies can be declared internaly as part of the object's class specificat
ion, producing automation to the variables dependencies.
 The contracts between classes should support reactive instance variables
 involve in the internal dependencies.
 
\end_layout

\end_body
\end_document
