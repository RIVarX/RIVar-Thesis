#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass openu-thesis
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Conclusion
\begin_inset CommandInset label
LatexCommand label
name "chap:Conclusion"

\end_inset


\end_layout

\begin_layout Standard
This thesis handles the task to perform predictable behavior when applications
 grow with many code duplications and long chains of updates.
 Therefore we combine the OOP paradigm with the FRP paradigm.
 The OOP contributes the predictability to changing code, while the FRP
 contributes the predictability in the variables' updates.
\end_layout

\begin_layout Standard
We described our model by introducing RIVar as a special type of variable,
 being a reactive and instance variable, with an assignment specification.
 A single variable can be assigned by several clients, with the semantics
 that the variable's value can be provided from several sources, while the
 variable observes its sources by itself.
 The variables use an order model, to update consistently according to the
 latest produced input.
\end_layout

\begin_layout Standard
To evaluate the model, we compared it to prevoius paradigms and solutions
 and also implemented it as a library with an attached case study.
 In the comparison, we compared the model to REScala and ReactiveX providing
 an investigation on how we derive properties from OOP and FRP.
 We then showed how the model outperforms the previous paradigms in terms
 of code reuse, while handling correctly any dependancy graph.
 We also compared the model to constraints systems, and provided a presentation
 to the model to being as a decenterlized constraints system.
\end_layout

\begin_layout Section
Future Work
\end_layout

\begin_layout Standard
We expect this approach being implemented as a state management solution and
 ease the development of front end applications.
 In the area of front end, the state menegement is seperated from the other
 parts of the development.
 There are various solutions to handle the role 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
https://docs.flutter.dev/development/data-and-backend/state-mgmt/options
\end_layout

\end_inset

.
 Each solution has its maintenance and behavior limitations.
 our model should be ease in the maintenance, but the behavior is limited
 to inferring values according to the latest value coming from any of the
 sources.
 
\end_layout

\begin_layout Standard
There are additional options to be researched for reactive variables to inffer
 their values.
 We think about the 
\emph on
equality tests
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "perez2015bridging"
literal "false"

\end_inset

, in which values with no change are ignored.
 In addition, it might be that values should be rejected, in case that they
 are conflicted with another source, such case need the abstraction to be
 extended.
 In addition, we should check about integrating several semantics options.
\end_layout

\end_body
\end_document
